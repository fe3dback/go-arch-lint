models.Config{
 SyntaxProblems: models.RefSlice[string](nil),
 Version: models.Ref[internal/models.ConfigVersion]{
  Value: 3,
  Ref: models.Reference{
   File: "/conf.yml",
   Line: 1,
   Column: 10,
   XPath: "$.version",
   Valid: true,
  },
 },
 WorkingDirectory: models.Ref[internal/models.PathRelative]{
  Value: "",
  Ref: models.Reference{
   File: "",
   Line: 0,
   Column: 0,
   XPath: "",
   Valid: false,
  },
 },
 Settings: models.ConfigSettings{
  DeepScan: models.Ref[bool]{
   Value: true,
   Ref: models.Reference{
    File: "/conf.yml",
    Line: 4,
    Column: 13,
    XPath: "$.allow.deepScan",
    Valid: true,
   },
  },
  Imports: models.ConfigSettingsImports{
   StrictMode: models.Ref[bool]{
    Value: false,
    Ref: models.Reference{
     File: "",
     Line: 0,
     Column: 0,
     XPath: "",
     Valid: false,
    },
   },
   AllowAnyVendorImports: models.Ref[bool]{
    Value: false,
    Ref: models.Reference{
     File: "",
     Line: 0,
     Column: 0,
     XPath: "",
     Valid: false,
    },
   },
  },
  Tags: models.ConfigSettingsTags{
   Allowed: models.Ref[internal/models.ConfigSettingsTagsEnum]{
    Value: "All",
    Ref: models.Reference{
     File: "",
     Line: 0,
     Column: 0,
     XPath: "",
     Valid: false,
    },
   },
   AllowedList: models.RefSlice[internal/models.StructTag](nil),
  },
 },
 Exclude: models.ConfigExclude{
  RelativeDirectories: models.RefSlice[internal/models.PathRelative]{
  },
  RelativeFiles: models.RefSlice[internal/models.PathRelativeRegExp]{
  },
 },
 Components: models.ConfigComponents{
  Map: models.RefMap[internal/models.ComponentName,internal/models.ConfigComponent]{
   values: map[models.ComponentName]models.ConfigComponent{
    "container": {
     In: models.RefSlice[internal/models.PathRelativeGlob]{
      {
       Value: "container",
       Ref: models.Reference{
        File: "/conf.yml",
        Line: 8,
        Column: 30,
        XPath: "$.components.container.in",
        Valid: true,
       },
      },
     },
    },
    "main": {
     In: models.RefSlice[internal/models.PathRelativeGlob]{
      {
       Value: "main",
       Ref: models.Reference{
        File: "/conf.yml",
        Line: 7,
        Column: 30,
        XPath: "$.components.main.in",
        Valid: true,
       },
      },
     },
    },
   },
   refs: map[models.ComponentName]models.Reference{
    "container": {
     File: "/conf.yml",
     Line: 8,
     Column: 24,
     XPath: "$.components.container",
     Valid: true,
    },
    "main": {
     File: "/conf.yml",
     Line: 7,
     Column: 24,
     XPath: "$.components.main",
     Valid: true,
    },
   },
  },
 },
 Vendors: models.ConfigVendors{
  Map: models.RefMap[internal/models.VendorName,internal/models.ConfigVendor]{
   values: map[models.VendorName]models.ConfigVendor{
   },
   refs: map[models.VendorName]models.Reference{
   },
  },
 },
 CommonComponents: models.RefSlice[internal/models.ComponentName]{
 },
 CommonVendors: models.RefSlice[internal/models.VendorName]{
 },
 Dependencies: models.ConfigDependencies{
  Map: models.RefMap[internal/models.ComponentName,internal/models.ConfigComponentDependencies]{
   values: map[models.ComponentName]models.ConfigComponentDependencies{
    "main": {
     MayDependOn: models.RefSlice[internal/models.ComponentName]{
      {
       Value: "container",
       Ref: models.Reference{
        File: "/conf.yml",
        Line: 13,
        Column: 7,
        XPath: "$.deps.main.mayDependOn",
        Valid: true,
       },
      },
     },
     CanUse: models.RefSlice[internal/models.VendorName]{
     },
     AnyVendorDeps: models.Ref[bool]{
      Value: false,
      Ref: models.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     AnyProjectDeps: models.Ref[bool]{
      Value: false,
      Ref: models.Reference{
       File: "",
       Line: 0,
       Column: 0,
       XPath: "",
       Valid: false,
      },
     },
     CanContainTags: models.RefSlice[internal/models.StructTag]{
     },
    },
   },
   refs: map[models.ComponentName]models.Reference{
    "main": {
     File: "/conf.yml",
     Line: 12,
     Column: 16,
     XPath: "$.deps.main",
     Valid: true,
    },
   },
  },
 },
}
